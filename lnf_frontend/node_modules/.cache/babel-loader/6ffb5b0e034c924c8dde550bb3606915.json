{"ast":null,"code":"var _jsxFileName = \"D:\\\\@Downloads\\\\react-redux-login-register-master\\\\src\\\\containers\\\\Post\\\\UploaderComponent.js\";\n// for backend, see https://gist.github.com/elon-gs/d6adae8b77d7c90cb76b591fef10d24a\nimport React, { Component } from 'react';\nimport ImageUploader from 'react-images-upload';\nimport axios from 'axios';\nlet uploading = false;\n\nclass UploaderComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imagePath: null\n    };\n\n    this.handleUpload = pictures => {\n      if (!pictures || pictures.length === 0) {\n        this.setState({\n          imagePath: null\n        });\n      } else if (!uploading) {\n        uploading = true; // using a variable because setState did not trigger fast enough to avoid redundant function calls\n\n        const data = new FormData();\n        data.append('yourFieldHere', 'yourValueHere');\n        data.append('image', pictures[0]);\n        axios.post('localhost:8081/api/lost/upload'.concat(\"/upload\"), data, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(({\n          data\n        }) => {\n          uploading = false;\n\n          if (data && data.length > 0) {\n            this.setState({\n              imagePath: data[0]\n            });\n          } else {\n            console.log('No URL returned');\n          }\n        }).catch(e => {\n          uploading = false;\n          console.log(e);\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(ImageUploader, {\n      withPreview: true,\n      buttonText: \"Upload image\",\n      onChange: this.handleUpload,\n      imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n      maxFileSize: 5242880,\n      singleImage: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default UploaderComponent;","map":{"version":3,"sources":["D:\\@Downloads\\react-redux-login-register-master\\src\\containers\\Post\\UploaderComponent.js"],"names":["React","Component","ImageUploader","axios","uploading","UploaderComponent","state","imagePath","handleUpload","pictures","length","setState","data","FormData","append","post","headers","then","console","log","catch","e","render"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,SAAS,GAAG,KAAhB;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCK,KADwC,GAChC;AACNC,MAAAA,SAAS,EAAE;AADL,KADgC;;AAAA,SAIxCC,YAJwC,GAIxBC,QAAD,IAAc;AAC3B,UAAI,CAACA,QAAD,IAAaA,QAAQ,CAACC,MAAT,KAAoB,CAArC,EAAwC;AACtC,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAFD,MAEO,IAAI,CAACH,SAAL,EAAgB;AACrBA,QAAAA,SAAS,GAAG,IAAZ,CADqB,CAErB;;AAEA,cAAMQ,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,QAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,eAA7B;AACAF,QAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBL,QAAQ,CAAC,CAAD,CAA7B;AACAN,QAAAA,KAAK,CAACY,IAAN,CAAc,gCAAd,oBAAyDH,IAAzD,EAA+D;AAAEI,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB;AAAX,SAA/D,EAAqHC,IAArH,CAA0H,CAAC;AAAEL,UAAAA;AAAF,SAAD,KAAc;AACpIR,UAAAA,SAAS,GAAG,KAAZ;;AACA,cAAIQ,IAAI,IAAIA,IAAI,CAACF,MAAL,GAAc,CAA1B,EAA6B;AACzB,iBAAKC,QAAL,CAAc;AAAEJ,cAAAA,SAAS,EAAEK,IAAI,CAAC,CAAD;AAAjB,aAAd;AACH,WAFD,MAEO;AACHM,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ,SAPD,EAOGC,KAPH,CAOSC,CAAC,IAAI;AACVjB,UAAAA,SAAS,GAAG,KAAZ;AACAc,UAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,SAVD;AAWD;AACF,KA1BuC;AAAA;;AA2BxCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AACI,MAAA,WAAW,EAAE,IADjB;AAEI,MAAA,UAAU,EAAC,cAFf;AAGI,MAAA,QAAQ,EAAE,KAAKd,YAHnB;AAII,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAJlB;AAKI,MAAA,WAAW,EAAE,OALjB;AAMI,MAAA,WAAW,EAAE,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAtCuC;;AAyC1C,eAAeH,iBAAf","sourcesContent":["// for backend, see https://gist.github.com/elon-gs/d6adae8b77d7c90cb76b591fef10d24a\r\n\r\nimport React, { Component } from 'react';\r\nimport ImageUploader from 'react-images-upload';\r\nimport axios from 'axios';\r\n\r\nlet uploading = false;\r\n\r\nclass UploaderComponent extends Component {\r\n  state = {\r\n    imagePath: null\r\n  }\r\n  handleUpload = (pictures) => {\r\n    if (!pictures || pictures.length === 0) {\r\n      this.setState({ imagePath: null });\r\n    } else if (!uploading) {\r\n      uploading = true;\r\n      // using a variable because setState did not trigger fast enough to avoid redundant function calls\r\n      \r\n      const data = new FormData();\r\n      data.append('yourFieldHere', 'yourValueHere');\r\n      data.append('image', pictures[0]);\r\n      axios.post(`${'localhost:8081/api/lost/upload'}/upload`, data, { headers: {'Content-Type': 'multipart/form-data' }}).then(({ data }) => {\r\n          uploading = false;\r\n          if (data && data.length > 0) {\r\n              this.setState({ imagePath: data[0] });\r\n          } else {\r\n              console.log('No URL returned');\r\n          }\r\n      }).catch(e => {\r\n          uploading = false;\r\n          console.log(e);\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <ImageUploader\r\n          withPreview={true}\r\n          buttonText='Upload image'\r\n          onChange={this.handleUpload}\r\n          imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n          maxFileSize={5242880}\r\n          singleImage={true}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default UploaderComponent;"]},"metadata":{},"sourceType":"module"}