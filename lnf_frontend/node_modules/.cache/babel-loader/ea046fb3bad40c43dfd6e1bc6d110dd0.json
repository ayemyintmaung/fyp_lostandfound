{"ast":null,"code":"import instance from '../utils/api';\nimport { Notification } from 'element-react';\nimport 'element-theme-default';\nexport const storeToken = token => {\n  localStorage.setItem('token', JSON.stringify(token));\n  instance.defaults.headers.common.authorization = \"Bearer \".concat(token);\n};\nexport const postFoundItemAPI = data => dispatch => {\n  console.log(data);\n  Notification({\n    title: 'Success',\n    message: 'Post Found Item Successful',\n    type: 'success',\n    duration: 1500\n  });\n  const promise = new Promise((resolve, reject) => {\n    instance.post('found/post', data).then(res => {\n      dispatch({\n        type: 'SET_POST_FOUND',\n        value: 'Post Found Item'\n      });\n      resolve(res);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\nexport const postLostItemAPI = data => dispatch => {\n  console.log(data);\n  Notification({\n    title: 'Success',\n    message: 'Post Lost Item Successful',\n    type: 'success',\n    duration: 1500\n  });\n  const promise = new Promise((resolve, reject) => {\n    instance.post('lost/post', data).then(res => {\n      console.log(res);\n      dispatch({\n        type: 'SET_POST_LOST',\n        value: 'Post Lost Item'\n      });\n      resolve(res);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};","map":{"version":3,"sources":["D:\\fyp_final\\lnf_frontend\\src\\actions\\post.js"],"names":["instance","Notification","storeToken","token","localStorage","setItem","JSON","stringify","defaults","headers","common","authorization","postFoundItemAPI","data","dispatch","console","log","title","message","type","duration","promise","Promise","resolve","reject","post","then","res","value","err","postLostItemAPI"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAO,uBAAP;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B;AACAH,EAAAA,QAAQ,CAACQ,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiCC,aAAjC,oBAA2DR,KAA3D;AACD,CAHM;AAKP,OAAO,MAAMS,gBAAgB,GAAIC,IAAD,IAAWC,QAAD,IAAc;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAZ,EAAAA,YAAY,CAAC;AACZgB,IAAAA,KAAK,EAAE,SADK;AAEZC,IAAAA,OAAO,EAAE,4BAFG;AAGZC,IAAAA,IAAI,EAAE,SAHM;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAAD,CAAZ;AAMA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDxB,IAAAA,QAAQ,CAACyB,IAAT,CAAc,YAAd,EAA4BZ,IAA5B,EACEa,IADF,CACQC,GAAD,IAAS;AACdb,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAE,gBAAP;AAAyBS,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAL,MAAAA,OAAO,CAACI,GAAD,CAAP;AACA,KAJF,EAIKE,GAAD,IAAS;AACXL,MAAAA,MAAM,CAACK,GAAD,CAAN;AACA,KANF;AAOA,GARe,CAAhB;AAUA,SAAOR,OAAP;AACA,CAnBM;AAqBP,OAAO,MAAMS,eAAe,GAAIjB,IAAD,IAAWC,QAAD,IAAc;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAZ,EAAAA,YAAY,CAAC;AACZgB,IAAAA,KAAK,EAAE,SADK;AAEZC,IAAAA,OAAO,EAAE,2BAFG;AAGZC,IAAAA,IAAI,EAAE,SAHM;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAAD,CAAZ;AAMA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDxB,IAAAA,QAAQ,CAACyB,IAAT,CAAc,WAAd,EAA2BZ,IAA3B,EACEa,IADF,CACQC,GAAD,IAAS;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACAb,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAE,eAAP;AAAwBS,QAAAA,KAAK,EAAE;AAA/B,OAAD,CAAR;AACAL,MAAAA,OAAO,CAACI,GAAD,CAAP;AACA,KALF,EAKKE,GAAD,IAAS;AACXL,MAAAA,MAAM,CAACK,GAAD,CAAN;AACA,KAPF;AAQA,GATe,CAAhB;AAWA,SAAOR,OAAP;AACA,CApBM","sourcesContent":["import instance from '../utils/api';\nimport { Notification } from 'element-react';\nimport 'element-theme-default';\n\nexport const storeToken = (token) => {\n  localStorage.setItem('token', JSON.stringify(token));\n  instance.defaults.headers.common.authorization = `Bearer ${token}`;\n}\n\nexport const postFoundItemAPI = (data) => (dispatch) => {\n\tconsole.log(data);\n\tNotification({\n\t\ttitle: 'Success',\n\t\tmessage: 'Post Found Item Successful',\n\t\ttype: 'success',\n\t\tduration: 1500\n\t  });\n\tconst promise = new Promise((resolve, reject) => {\n\t\tinstance.post('found/post', data)\n\t\t\t.then((res) => {\n\t\t\t\tdispatch({type: 'SET_POST_FOUND', value: 'Post Found Item'});\n\t\t\t\tresolve(res);\n\t\t\t}, (err) => {\n\t\t\t\treject(err);\n\t\t\t})\n\t})\n\n\treturn promise\n}\n\nexport const postLostItemAPI = (data) => (dispatch) => {\n\tconsole.log(data);\n\tNotification({\n\t\ttitle: 'Success',\n\t\tmessage: 'Post Lost Item Successful',\n\t\ttype: 'success',\n\t\tduration: 1500\n\t  });\n\tconst promise = new Promise((resolve, reject) => {\n\t\tinstance.post('lost/post', data)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tdispatch({type: 'SET_POST_LOST', value: 'Post Lost Item'});\n\t\t\t\tresolve(res);\n\t\t\t}, (err) => {\n\t\t\t\treject(err);\n\t\t\t})\n\t})\n\n\treturn promise\n}\n"]},"metadata":{},"sourceType":"module"}