{"ast":null,"code":"import instance from '../utils/api';\nexport const storeToken = token => {\n  localStorage.setItem('token', JSON.stringify(token));\n  instance.defaults.headers.common.authorization = \"Bearer \".concat(token);\n};\nexport const postfoundAPI = data => dispatch => {\n  const promise = new Promise((resolve, reject) => {\n    instance.post('found/post', data).then(res => {\n      dispatch({\n        type: 'SET_POST_FOUND',\n        value: 'Post Found Item'\n      });\n      resolve(res);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};\nexport const postLostItemAPI = data => dispatch => {\n  const promise = new Promise((resolve, reject) => {\n    instance.post('lost/post', data).then(res => {\n      dispatch({\n        type: 'SET_POST_LOST',\n        value: 'Post Lost Item'\n      });\n      resolve(res);\n    }, err => {\n      reject(err);\n    });\n  });\n  return promise;\n};","map":{"version":3,"sources":["D:\\@Downloads\\react-redux-login-register-master\\src\\actions\\post.js"],"names":["instance","storeToken","token","localStorage","setItem","JSON","stringify","defaults","headers","common","authorization","postfoundAPI","data","dispatch","promise","Promise","resolve","reject","post","then","res","type","value","err","postLostItemAPI"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B;AACAF,EAAAA,QAAQ,CAACO,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiCC,aAAjC,oBAA2DR,KAA3D;AACD,CAHM;AAKP,OAAO,MAAMS,YAAY,GAAIC,IAAD,IAAWC,QAAD,IAAc;AACnD,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDjB,IAAAA,QAAQ,CAACkB,IAAT,CAAc,YAAd,EAA4BN,IAA5B,EACEO,IADF,CACQC,GAAD,IAAS;AACdP,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,gBAAP;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAAD,CAAR;AACAN,MAAAA,OAAO,CAACI,GAAD,CAAP;AACA,KAJF,EAIKG,GAAD,IAAS;AACXN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACA,KANF;AAOA,GARe,CAAhB;AAUA,SAAOT,OAAP;AACA,CAZM;AAcP,OAAO,MAAMU,eAAe,GAAIZ,IAAD,IAAWC,QAAD,IAAc;AACtD,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDjB,IAAAA,QAAQ,CAACkB,IAAT,CAAc,WAAd,EAA2BN,IAA3B,EACEO,IADF,CACQC,GAAD,IAAS;AACdP,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,eAAP;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OAAD,CAAR;AACAN,MAAAA,OAAO,CAACI,GAAD,CAAP;AACA,KAJF,EAIKG,GAAD,IAAS;AACXN,MAAAA,MAAM,CAACM,GAAD,CAAN;AACA,KANF;AAOA,GARe,CAAhB;AAUA,SAAOT,OAAP;AACA,CAZM","sourcesContent":["import instance from '../utils/api';\n\nexport const storeToken = (token) => {\n  localStorage.setItem('token', JSON.stringify(token));\n  instance.defaults.headers.common.authorization = `Bearer ${token}`;\n}\n\nexport const postfoundAPI = (data) => (dispatch) => {\n\tconst promise = new Promise((resolve, reject) => {\n\t\tinstance.post('found/post', data)\n\t\t\t.then((res) => {\n\t\t\t\tdispatch({type: 'SET_POST_FOUND', value: 'Post Found Item'});\n\t\t\t\tresolve(res);\n\t\t\t}, (err) => {\n\t\t\t\treject(err);\n\t\t\t})\n\t})\n\n\treturn promise\n}\n\nexport const postLostItemAPI = (data) => (dispatch) => {\n\tconst promise = new Promise((resolve, reject) => {\n\t\tinstance.post('lost/post', data)\n\t\t\t.then((res) => {\n\t\t\t\tdispatch({type: 'SET_POST_LOST', value: 'Post Lost Item'});\n\t\t\t\tresolve(res);\n\t\t\t}, (err) => {\n\t\t\t\treject(err);\n\t\t\t})\n\t})\n\n\treturn promise\n}\n"]},"metadata":{},"sourceType":"module"}