{"ast":null,"code":"var _jsxFileName = \"D:\\\\@Downloads\\\\react-redux-login-register-master\\\\src\\\\containers\\\\ItemList\\\\FoundItems.js\";\nimport React, { Component } from 'react'; // import { Container, Col, Row, Card } from 'react-bootstrap';\n\nimport { connect } from 'react-redux';\nimport { SubmissionError } from 'redux-form';\nimport { loginAPI } from '../../actions/auth';\nimport { Button, Icon, Layout, Table, Card } from 'element-react';\nimport 'element-theme-default';\n\nclass FoundItems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = data => {\n      console.log(data);\n      return this.props.login(data).then(res => {\n        console.log(res);\n        this.props.history.push('/admin');\n      }, err => {\n        console.log(err.response);\n        throw new SubmissionError({\n          _error: 'Login failed! Email Or Password not correct'\n        });\n      });\n    };\n\n    this.state = {\n      columns: [{\n        label: \"Date\",\n        prop: \"date\",\n        width: 150,\n        fixed: 'left',\n        align: 'center'\n      }, {\n        label: \"Name\",\n        prop: \"name\",\n        width: 120\n      }, {\n        label: \"State\",\n        prop: \"state\",\n        width: 120\n      }, {\n        label: \"City\",\n        prop: \"city\",\n        width: 120\n      }, {\n        label: \"Address\",\n        prop: \"address\",\n        width: 300\n      }, {\n        label: \"Zip\",\n        prop: \"zip\",\n        width: 120\n      }, {\n        label: \"Operations\",\n        width: 120,\n        fixed: 'right',\n        render: (row, column, index) => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"text\",\n            size: \"small\",\n            onClick: this.deleteRow.bind(this, index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"Remove\"));\n        }\n      }],\n      data: [{\n        date: '2016-05-03',\n        name: 'Tom',\n        state: 'California',\n        city: 'Los Angeles',\n        address: 'No. 189, Grove St, Los Angeles',\n        zip: 'CA 90036'\n      }, {\n        date: '2016-05-02',\n        name: 'Tom',\n        state: 'California',\n        city: 'Los Angeles',\n        address: 'No. 189, Grove St, Los Angeles',\n        zip: 'CA 90036'\n      }, {\n        date: '2016-05-04',\n        name: 'Tom',\n        state: 'California',\n        city: 'Los Angeles',\n        address: 'No. 189, Grove St, Los Angeles',\n        zip: 'CA 90036'\n      }, {\n        date: '2016-05-01',\n        name: 'Tom',\n        state: 'California',\n        city: 'Los Angeles',\n        address: 'No. 189, Grove St, Los Angeles',\n        zip: 'CA 90036'\n      }, {\n        date: '2016-05-08',\n        name: 'Tom',\n        state: 'California',\n        city: 'Los Angeles',\n        address: 'No. 189, Grove St, Los Angeles',\n        zip: 'CA 90036'\n      }, {\n        date: '2016-05-06',\n        name: 'Tom',\n        state: 'California',\n        city: 'Los Angeles',\n        address: 'No. 189, Grove St, Los Angeles',\n        zip: 'CA 90036'\n      }, {\n        date: '2016-05-07',\n        name: 'Tom',\n        state: 'California',\n        city: 'Los Angeles',\n        address: 'No. 189, Grove St, Los Angeles',\n        zip: 'CA 90036'\n      }]\n    };\n  }\n\n  deleteRow(index) {\n    const data = this.state.data;\n    data.splice(index, 1);\n    this.setState({\n      data: [...data]\n    });\n  }\n\n  render() {\n    return React.createElement(Table, {\n      style: {\n        width: '100%'\n      },\n      columns: this.state.columns,\n      data: this.state.data,\n      border: true,\n      maxHeight: 250,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst reduxDispatch = dispatch => ({\n  login: data => dispatch(loginAPI(data))\n});\n\nexport default connect(null, reduxDispatch)(FoundItems);","map":{"version":3,"sources":["D:\\@Downloads\\react-redux-login-register-master\\src\\containers\\ItemList\\FoundItems.js"],"names":["React","Component","connect","SubmissionError","loginAPI","Button","Icon","Layout","Table","Card","FoundItems","constructor","props","handleSubmit","data","console","log","login","then","res","history","push","err","response","_error","state","columns","label","prop","width","fixed","align","render","row","column","index","deleteRow","bind","date","name","city","address","zip","splice","setState","reduxDispatch","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n// import { Container, Col, Row, Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport { SubmissionError } from 'redux-form';\r\nimport { loginAPI } from '../../actions/auth'\r\nimport { Button,Icon, Layout, Table, Card } from 'element-react';\r\nimport 'element-theme-default';\r\n\r\nclass FoundItems extends Component {\r\n\r\n  handleSubmit = (data) => {\r\n    console.log(data);  \r\n\r\n    return this.props.login(data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.props.history.push('/admin');        \r\n      }, (err) => {\r\n        console.log(err.response);\r\n        throw new SubmissionError({\r\n          _error: 'Login failed! Email Or Password not correct'\r\n        })\r\n      });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      columns: [\r\n        {\r\n          label: \"Date\",\r\n          prop: \"date\",\r\n          width: 150,\r\n          fixed: 'left',\r\n          align: 'center'\r\n        },\r\n        {\r\n          label: \"Name\",\r\n          prop: \"name\",\r\n          width: 120,\r\n        },\r\n        {\r\n          label: \"State\",\r\n          prop: \"state\",\r\n          width: 120\r\n        },\r\n        {\r\n          label: \"City\",\r\n          prop: \"city\",\r\n          width: 120\r\n        },\r\n        {\r\n          label: \"Address\",\r\n          prop: \"address\",\r\n          width: 300\r\n        },\r\n        {\r\n          label: \"Zip\",\r\n          prop: \"zip\",\r\n          width: 120,\r\n        },\r\n        {\r\n          label: \"Operations\",\r\n          width: 120,\r\n          fixed: 'right',\r\n          render: (row, column, index)=>{\r\n            return <span><Button type=\"text\" size=\"small\" onClick={this.deleteRow.bind(this, index)}>Remove</Button></span>\r\n          }\r\n        }\r\n      ],\r\n      data: [{\r\n        date: '2016-05-03',\r\n        name: 'Tom',\r\n        state: 'California',\r\n        city: 'Los Angeles',\r\n        address: 'No. 189, Grove St, Los Angeles',\r\n        zip: 'CA 90036'\r\n      }, {\r\n        date: '2016-05-02',\r\n        name: 'Tom',\r\n        state: 'California',\r\n        city: 'Los Angeles',\r\n        address: 'No. 189, Grove St, Los Angeles',\r\n        zip: 'CA 90036'\r\n      }, {\r\n        date: '2016-05-04',\r\n        name: 'Tom',\r\n        state: 'California',\r\n        city: 'Los Angeles',\r\n        address: 'No. 189, Grove St, Los Angeles',\r\n        zip: 'CA 90036'\r\n      }, {\r\n        date: '2016-05-01',\r\n        name: 'Tom',\r\n        state: 'California',\r\n        city: 'Los Angeles',\r\n        address: 'No. 189, Grove St, Los Angeles',\r\n        zip: 'CA 90036'\r\n      }, {\r\n        date: '2016-05-08',\r\n        name: 'Tom',\r\n        state: 'California',\r\n        city: 'Los Angeles',\r\n        address: 'No. 189, Grove St, Los Angeles',\r\n        zip: 'CA 90036'\r\n      }, {\r\n        date: '2016-05-06',\r\n        name: 'Tom',\r\n        state: 'California',\r\n        city: 'Los Angeles',\r\n        address: 'No. 189, Grove St, Los Angeles',\r\n        zip: 'CA 90036'\r\n      }, {\r\n        date: '2016-05-07',\r\n        name: 'Tom',\r\n        state: 'California',\r\n        city: 'Los Angeles',\r\n        address: 'No. 189, Grove St, Los Angeles',\r\n        zip: 'CA 90036'\r\n      }]\r\n    }\r\n  }\r\n  \r\n  deleteRow(index) {\r\n    const { data } = this.state;\r\n    data.splice(index, 1);\r\n    this.setState({\r\n      data: [...data]\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Table\r\n        style={{width: '100%'}}\r\n        columns={this.state.columns}\r\n        data={this.state.data}\r\n        border={true}\r\n        maxHeight={250}\r\n      />\r\n    )\r\n  }\r\n}  \r\n  \r\nconst reduxDispatch = (dispatch) => ({\r\n  login: (data) => dispatch(loginAPI(data))\r\n});\r\n\r\nexport default connect(null, reduxDispatch)(FoundItems);\r\n"]},"metadata":{},"sourceType":"module"}