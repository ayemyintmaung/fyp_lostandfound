{"ast":null,"code":"var _jsxFileName = \"D:\\\\fyp_final\\\\lnf_frontend\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nimport App from './containers/App';\nimport { i18n } from 'element-react';\nimport locale from 'element-react/src/locale/lang/en';\ni18n.use(locale);\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nif (localStorage.token) {\n  console.log('localStorage is there');\n  const token = JSON.parse(localStorage.token);\n  store.dispatch({\n    type: 'SET_LOGIN',\n    value: token\n  });\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n})), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["D:\\fyp_final\\lnf_frontend\\src\\index.jsx"],"names":["React","ReactDOM","serviceWorker","createStore","applyMiddleware","Provider","thunk","rootReducer","App","i18n","locale","use","store","localStorage","token","console","log","JSON","parse","dispatch","type","value","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sCAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AAEAD,IAAI,CAACE,GAAL,CAASD,MAAT;AAGA,MAAME,KAAK,GAAGT,WAAW,CACxBI,WADwB,EAExBH,eAAe,CAACE,KAAD,CAFS,CAAzB;;AAKA,IAAGO,YAAY,CAACC,KAAhB,EAAuB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMF,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,KAAxB,CAAd;AACAF,EAAAA,KAAK,CAACO,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAE,WAAP;AAAoBC,IAAAA,KAAK,EAAEP;AAA3B,GAAf;AACA;;AAEDb,QAAQ,CAACqB,MAAT,CACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,EAICW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJD;AAMAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer'\nimport App from './containers/App';\n\nimport { i18n } from 'element-react'\nimport locale from 'element-react/src/locale/lang/en'\n\ni18n.use(locale);\n\n\nconst store = createStore(\n\trootReducer,\n\tapplyMiddleware(thunk)\n)\n\nif(localStorage.token) {\n\tconsole.log('localStorage is there')\n\tconst token = JSON.parse(localStorage.token);\n\tstore.dispatch({type: 'SET_LOGIN', value: token});\n}\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}