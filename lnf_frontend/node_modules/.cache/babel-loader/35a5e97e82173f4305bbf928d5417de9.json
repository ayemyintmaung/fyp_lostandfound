{"ast":null,"code":"// import React, { Component } from 'react';\n// import ImageUploader from 'react-images-upload';\n// import axios from 'axios';\n// let uploading = false;\n// class UploaderComponent extends Component {\n//   state = {\n//     imagePath: null\n//   }\n//   handleUpload = (pictures) => {\n//     if (!pictures || pictures.length === 0) {\n//       this.setState({ imagePath: null });\n//     } else if (!uploading) {\n//       uploading = true;\n//       const data = new FormData();\n//       data.append('yourFieldHere', 'yourValueHere');\n//       data.append('image', pictures[0]);\n//       axios.post(`${'http://localhost:8081/api/image/'}upload`, data, { headers: {'Content-Type': 'multipart/form-data' }}).then(({ data }) => {\n//           this.props.parentCallback(data);\n//           uploading = false;\n//           if (data && data.length > 0) {\n//               this.setState({ imagePath: data[0] });\n//           } else {\n//               console.log('No URL returned');\n//           }\n//       }).catch(e => {\n//           uploading = false;\n//           console.log(e);\n//       });\n//     }\n//   }\n//   render() {\n//     return (\n//       <ImageUploader\n//           withPreview={true}\n//           buttonText='Upload image'\n//           onChange={this.handleUpload}\n//           imgExtension={['.jpg', '.gif', '.png', '.gif']}\n//           maxFileSize={5242880}\n//           singleImage={true}\n//       />\n//     )\n//   }\n// }\n// export default UploaderComponent;","map":{"version":3,"sources":["D:\\@Downloads\\react-redux-login-register-master\\src\\containers\\Post\\UploaderComponent.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\r\n// import ImageUploader from 'react-images-upload';\r\n// import axios from 'axios';\r\n\r\n// let uploading = false;\r\n\r\n// class UploaderComponent extends Component {\r\n\r\n//   state = {\r\n//     imagePath: null\r\n//   }\r\n  \r\n//   handleUpload = (pictures) => {\r\n//     if (!pictures || pictures.length === 0) {\r\n        \r\n//       this.setState({ imagePath: null });\r\n//     } else if (!uploading) {\r\n//       uploading = true;\r\n//       const data = new FormData();\r\n//       data.append('yourFieldHere', 'yourValueHere');\r\n//       data.append('image', pictures[0]);\r\n//       axios.post(`${'http://localhost:8081/api/image/'}upload`, data, { headers: {'Content-Type': 'multipart/form-data' }}).then(({ data }) => {\r\n//           this.props.parentCallback(data);\r\n//           uploading = false;\r\n//           if (data && data.length > 0) {\r\n//               this.setState({ imagePath: data[0] });\r\n//           } else {\r\n//               console.log('No URL returned');\r\n//           }\r\n//       }).catch(e => {\r\n//           uploading = false;\r\n//           console.log(e);\r\n//       });\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <ImageUploader\r\n//           withPreview={true}\r\n//           buttonText='Upload image'\r\n//           onChange={this.handleUpload}\r\n//           imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n//           maxFileSize={5242880}\r\n//           singleImage={true}\r\n//       />\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default UploaderComponent;"]},"metadata":{},"sourceType":"module"}